name: Create tfvars file
decription: Create a tfvars file that's going to be used by terraform plan/apply.
inputs:
  ACCOUNT:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  ADMIN_DB_PASSWORD:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  ADMIN_DB_USERNAME:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  DB_PASSWORD:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  DB_USERNAME:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  ECR_IMAGE:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  ENV:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  FORCE_REFRESH:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
  MFT_CLUSTER:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
runs:
  using: "composite"
  steps:
    - name: Setup Terraform variables
      working-directory: ./terraform
      id: vars
      run: |-
        cat > pipeline.auto.tfvars2 <<EOF
        ACCOUNT = "${{ inputs.ACCOUNT }}"
        ADMIN_DB_PASSWORD = "${{ inputs.ADMIN_DB_PASSWORD }}"
        ADMIN_DB_USERNAME = "${{ inputs.ADMIN_DB_USERNAME }}"
        BRANCH_NAME = "${{ env.BRANCH_NAME }}"
        DB_PASSWORD = "${{ inputs.DB_PASSWORD }}"
        DB_USERNAME = "${{ inputs.DB_USERNAME }}"
        ECR_IMAGE = "${{ inputs.ECR_IMAGE }}"
        ENV = "${{ inputs.ENV }}"
        FORCE_REFRESH = "${{ inputs.FORCE_REFRESH }}"
        MFT_CLUSTER = "${{ inputs.MFT_CLUSTER }}"
        EOF
      shell: bash