name: Cleanup

on:
  pull_request:
    types:
      - closed

env:
  AWS_REGION : "ca-central-1"
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

permissions:
  id-token: write
  contents: read

jobs:
  Cleanup-PR:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: "dev"
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_GITHUB_DEVOPS_ROLE}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Terraform-Setup
        id: Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true

      - name: Terraform-Init
        id: Init
        run: terraform init
          -backend-config="dynamodb_table=terraform-state-${{vars.ENV}}" 
          -backend-config="key=${{vars.ENV}}/${{env.BRANCH_NAME}}/terraform.tfstate"

      - name: Terraform-Destroy
        id: Destroy
        run: terraform destroy 
          -var ENV=${{vars.ENV}}
          -var ACCOUNT=${{secrets.ACCOUNT}}
          -var ADMIN_DB_USERNAME=${{secrets.ADMIN_DB_USERNAME}}
          -var ADMIN_DB_PASSWORD=${{secrets.ADMIN_DB_PASSWORD}}
          -var DB_USERNAME=${{secrets.DB_USERNAME}}
          -var DB_PASSWORD=${{secrets.DB_PASSWORD}}
          -var BRANCH_NAME=${{env.BRANCH_NAME}}
          -var VPC_ID=${{secrets.VPC_ID}}
          -var ECR_IMAGE=
          -auto-approve
