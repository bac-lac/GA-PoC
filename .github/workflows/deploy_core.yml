name: Deploy Core Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Name of the environment to deploy"
        options:
        - pr
        - dev
        - test
        - prod

permissions:
      id-token: write
      contents: read

jobs:
  Code-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Checkov security scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/core
          output_format: cli
  Deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ./terraform/core
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_DEVOPS_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: "ca-central-1"
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Terraform-Setup
        id: Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true

      - name: Terraform-Init
        id: Init
        run: terraform init 
          -backend-config="dynamodb_table=main-tfstate-lock-1a6f390e"
          -backend-config="key=${{ vars.ENV }}/core/terraform.tfstate"

      - name: Terraform-Apply
        id: Apply
        run: terraform apply -var EXTERNAL_ID=${{ secrets.EXTERNAL_ID }} -var ROLE_ARN=${{ secrets.ROLE_ARN }} -var ENV=${{ vars.ENV }}-auto-approve