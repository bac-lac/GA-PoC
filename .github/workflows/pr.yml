name: pull-request

on:
  pull_request:
    branches:
      - main

env:
  AWS_REGION : "ca-central-1"

permissions:
      id-token: write
      contents: read

jobs:
  TerraformPlan:
    runs-on: ubuntu-latest
    environment: "dev"
    steps:
      - uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_GITHUB_DEVOPS_ROLE}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Terraform-Setup
        id: Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true

      - name: Terraform-Init
        id: Init
        run: terraform init -backend-config="dynamodb_table=terraform-state-dev" -backend-config="key=dev/terraform.tfstate"

      - name: Terraform-Plan
        id: Plan
        run: terraform plan -var ENV=dev -var ACCOUNT=${{vars.account}} -var VPC_ID=${{vars.VPC_ID}}

      - name: Update Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.USER_TOKEN }}
          script: |
            const output = `#### Terraform Initialization : ${{ steps.Init.outcome }}\`
            #### Terraform Plan : ${{ steps.Plan.outcome }}\`
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${{ steps.Plan.outputs.stdout }}
            \`\`\`
      
            </details>
      
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
