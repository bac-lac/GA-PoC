name: Pull Request

on:
  pull_request:
    branches:
      - main

env:
  AWS_REGION : "ca-central-1"
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  IMAGE_REPO_TAG: mft:${{ github.head_ref || github.ref_name }}-${{github.sha}}

permissions:
      id-token: write
      contents: read

jobs:
  Code-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run shellcheck
        uses: sudo-bot/action-shellcheck@latest
        with:
          cli-args: "./docker/scripts/*.sh"
      
      - name: Checkov security scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform
          output_format: cli

  TS:
    runs-on: ubuntu-latest
    steps:
      - name: variables
        run: |
            echo "vars.ENV: ${{ vars.ENV }}"

  Build:
    needs: Code-check
    if: ${{ vars.ENV == 'dev' }}
    runs-on: ubuntu-latest
    outputs:
      ecr_image: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_REPO_TAG }}@${{ steps.build-push.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_DEVOPS_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{env.AWS_REGION}}
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_REPO_TAG }}

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    environment: "pr"
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_DEVOPS_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Create tfvars file
        uses: ./.github/actions/create-tfvars-file
        with:
          secrets: ${{ toJSON(secrets) }}
          vars: ${{ toJSON(vars) }}
          
      - name: Add Dynamic Variables to tfvars
        run: |
          echo 'BRANCH_NAME = "${{ env.BRANCH_NAME }}"' >> pipeline.auto.tfvars
          echo 'ECR_IMAGE = "${{ needs.Build.outputs.ecr_image }}"' >> pipeline.auto.tfvars

      - name: Terraform-Setup
        id: Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true

      - name: Terraform-Init
        id: Init
        run: terraform init 
            -backend-config="dynamodb_table=terraform-state-${{ vars.ENV }}" 
            -backend-config="key=${{ vars.ENV }}/${{ env.BRANCH_NAME }}/terraform.tfstate"

      - name: Terraform-Apply
        id: Apply
        run: terraform apply -var-file="pipeline.auto.tfvars" -auto-approve