name: CICD

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Name of the environment to deploy"
        options:
        - dev
        - prod
  
env:
  AWS_REGION : "ca-central-1"

permissions:
      id-token: write
      contents: read

jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}

    steps:
      - uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_GITHUB_DEVOPS_ROLE}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-skip-session-tagging: true
          audience: sts.amazonaws.com

      - name: Terraform init
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true

      - run: terraform init -backend-config="dynamodb_table=terraform-state-${{inputs.environment}}" -backend-config="key=${{inputs.environment}}/terraform.tfstate"

      - run: terraform apply 
          -var ENV=${{inputs.environment}}
          -var ACCOUNT=${{secrets.ACCOUNT}}
          -var ADMIN_DB_USERNAME=${{secrets.ADMIN_DB_USERNAME}}
          -var ADMIN_DB_PASSWORD=${{secrets.ADMIN_DB_PASSWORD}}
          -var BRANCH_NAME=${{env.BRANCH_NAME}}
          -var VPC_ID=${{secrets.VPC_ID}}
          -auto-approve